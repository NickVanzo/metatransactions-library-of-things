/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  Marketplace,
  MarketplaceInterface,
} from "../../contracts/Marketplace";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_startDate",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_endDate",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_idItem",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
    ],
    name: "ItemPreordered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "getItem",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
        ],
        internalType: "struct Marketplace.Item",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNumberOfItems",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_hash",
        type: "bytes32",
      },
    ],
    name: "isHashAlreadyUser",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_startDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_endDate",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_hash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_signature",
        type: "bytes",
      },
    ],
    name: "preorderItem",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_hash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_signature",
        type: "bytes",
      },
    ],
    name: "verifySignature",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6113818061010d6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80638da5cb5b116100665780638da5cb5b1461010e578063b757b5621461012c578063c616c7db1461015c578063daca6f781461018c578063f2fde38b146101bc57610093565b80633129e77314610098578063715018a6146100c8578063730ef269146100d2578063893d20e8146100f0575b600080fd5b6100b260048036038101906100ad91906109ed565b6101d8565b6040516100bf9190610a45565b60405180910390f35b6100d061020f565b005b6100da610223565b6040516100e79190610a6f565b60405180910390f35b6100f8610234565b6040516101059190610acb565b60405180910390f35b610116610243565b6040516101239190610acb565b60405180910390f35b61014660048036038101906101419190610c62565b61026c565b6040516101539190610d14565b60405180910390f35b61017660048036038101906101719190610d2f565b610405565b6040516101839190610d14565b60405180910390f35b6101a660048036038101906101a19190610d5c565b61042f565b6040516101b39190610acb565b60405180910390f35b6101d660048036038101906101d19190610de4565b610443565b005b6101e0610990565b600260008381526020019081526020016000206040518060200160405290816000820154815250509050919050565b6102176104c7565b6102216000610545565b565b600061022f6003610609565b905090565b600061023e610243565b905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008385106102b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102a790610e94565b60405180910390fd5b6001600084815260200190815260200160002060009054906101000a900460ff1615610311576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030890610f00565b60405180910390fd5b610319610243565b73ffffffffffffffffffffffffffffffffffffffff166103398484610617565b73ffffffffffffffffffffffffffffffffffffffff161461038f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038690610f92565b60405180910390fd5b610399600361063e565b600180600085815260200190815260200160002060006101000a81548160ff0219169083151502179055506103cc610990565b86816000018181525050806002600089815260200190815260200160002060008201518160000155905050600191505095945050505050565b60006001600083815260200190815260200160002060009054906101000a900460ff169050919050565b600061043b8383610617565b905092915050565b61044b6104c7565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156104bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b290611024565b60405180910390fd5b6104c481610545565b50565b6104cf610654565b73ffffffffffffffffffffffffffffffffffffffff166104ed610243565b73ffffffffffffffffffffffffffffffffffffffff1614610543576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053a90611090565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081600001549050919050565b6000806000610626858561065c565b91509150610633816106ae565b819250505092915050565b6001816000016000828254019250508190555050565b600033905090565b60008060418351141561069e5760008060006020860151925060408601519150606086015160001a905061069287828585610883565b945094505050506106a7565b60006002915091505b9250929050565b600060048111156106c2576106c16110b0565b5b8160048111156106d5576106d46110b0565b5b14156106e057610880565b600160048111156106f4576106f36110b0565b5b816004811115610707576107066110b0565b5b1415610748576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073f9061112b565b60405180910390fd5b6002600481111561075c5761075b6110b0565b5b81600481111561076f5761076e6110b0565b5b14156107b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a790611197565b60405180910390fd5b600360048111156107c4576107c36110b0565b5b8160048111156107d7576107d66110b0565b5b1415610818576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080f90611229565b60405180910390fd5b60048081111561082b5761082a6110b0565b5b81600481111561083e5761083d6110b0565b5b141561087f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610876906112bb565b60405180910390fd5b5b50565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08360001c11156108be576000600391509150610987565b601b8560ff16141580156108d65750601c8560ff1614155b156108e8576000600491509150610987565b60006001878787876040516000815260200160405260405161090d9493929190611306565b6020604051602081039080840390855afa15801561092f573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561097e57600060019250925050610987565b80600092509250505b94509492505050565b6040518060200160405280600081525090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b6109ca816109b7565b81146109d557600080fd5b50565b6000813590506109e7816109c1565b92915050565b600060208284031215610a0357610a026109ad565b5b6000610a11848285016109d8565b91505092915050565b610a23816109b7565b82525050565b602082016000820151610a3f6000850182610a1a565b50505050565b6000602082019050610a5a6000830184610a29565b92915050565b610a69816109b7565b82525050565b6000602082019050610a846000830184610a60565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ab582610a8a565b9050919050565b610ac581610aaa565b82525050565b6000602082019050610ae06000830184610abc565b92915050565b6000819050919050565b610af981610ae6565b8114610b0457600080fd5b50565b600081359050610b1681610af0565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610b6f82610b26565b810181811067ffffffffffffffff82111715610b8e57610b8d610b37565b5b80604052505050565b6000610ba16109a3565b9050610bad8282610b66565b919050565b600067ffffffffffffffff821115610bcd57610bcc610b37565b5b610bd682610b26565b9050602081019050919050565b82818337600083830152505050565b6000610c05610c0084610bb2565b610b97565b905082815260208101848484011115610c2157610c20610b21565b5b610c2c848285610be3565b509392505050565b600082601f830112610c4957610c48610b1c565b5b8135610c59848260208601610bf2565b91505092915050565b600080600080600060a08688031215610c7e57610c7d6109ad565b5b6000610c8c888289016109d8565b9550506020610c9d888289016109d8565b9450506040610cae888289016109d8565b9350506060610cbf88828901610b07565b925050608086013567ffffffffffffffff811115610ce057610cdf6109b2565b5b610cec88828901610c34565b9150509295509295909350565b60008115159050919050565b610d0e81610cf9565b82525050565b6000602082019050610d296000830184610d05565b92915050565b600060208284031215610d4557610d446109ad565b5b6000610d5384828501610b07565b91505092915050565b60008060408385031215610d7357610d726109ad565b5b6000610d8185828601610b07565b925050602083013567ffffffffffffffff811115610da257610da16109b2565b5b610dae85828601610c34565b9150509250929050565b610dc181610aaa565b8114610dcc57600080fd5b50565b600081359050610dde81610db8565b92915050565b600060208284031215610dfa57610df96109ad565b5b6000610e0884828501610dcf565b91505092915050565b600082825260208201905092915050565b7f7374617274696e672064617465206d757374206265206c657373207468656e2060008201527f656e64696e672064617465000000000000000000000000000000000000000000602082015250565b6000610e7e602b83610e11565b9150610e8982610e22565b604082019050919050565b60006020820190508181036000830152610ead81610e71565b9050919050565b7f5468697320686173682077617320616c72656164792075736564000000000000600082015250565b6000610eea601a83610e11565b9150610ef582610eb4565b602082019050919050565b60006020820190508181036000830152610f1981610edd565b9050919050565b7f54686973207369676e617475726520697320696e76616c69642c207369676e6560008201527f7220646f65736e2774206d6174636820746865206f776e657200000000000000602082015250565b6000610f7c603983610e11565b9150610f8782610f20565b604082019050919050565b60006020820190508181036000830152610fab81610f6f565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061100e602683610e11565b915061101982610fb2565b604082019050919050565b6000602082019050818103600083015261103d81611001565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061107a602083610e11565b915061108582611044565b602082019050919050565b600060208201905081810360008301526110a98161106d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f45434453413a20696e76616c6964207369676e61747572650000000000000000600082015250565b6000611115601883610e11565b9150611120826110df565b602082019050919050565b6000602082019050818103600083015261114481611108565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265206c656e67746800600082015250565b6000611181601f83610e11565b915061118c8261114b565b602082019050919050565b600060208201905081810360008301526111b081611174565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265202773272076616c60008201527f7565000000000000000000000000000000000000000000000000000000000000602082015250565b6000611213602283610e11565b915061121e826111b7565b604082019050919050565b6000602082019050818103600083015261124281611206565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265202776272076616c60008201527f7565000000000000000000000000000000000000000000000000000000000000602082015250565b60006112a5602283610e11565b91506112b082611249565b604082019050919050565b600060208201905081810360008301526112d481611298565b9050919050565b6112e481610ae6565b82525050565b600060ff82169050919050565b611300816112ea565b82525050565b600060808201905061131b60008301876112db565b61132860208301866112f7565b61133560408301856112db565b61134260608301846112db565b9594505050505056fea2646970667358221220aa18efea8549e4ea7984a91eb96fec4ed235e63abc0abbcfa83f930cf31eea3564736f6c63430008090033";

type MarketplaceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MarketplaceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Marketplace__factory extends ContractFactory {
  constructor(...args: MarketplaceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Marketplace> {
    return super.deploy(overrides || {}) as Promise<Marketplace>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Marketplace {
    return super.attach(address) as Marketplace;
  }
  override connect(signer: Signer): Marketplace__factory {
    return super.connect(signer) as Marketplace__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MarketplaceInterface {
    return new utils.Interface(_abi) as MarketplaceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Marketplace {
    return new Contract(address, _abi, signerOrProvider) as Marketplace;
  }
}
